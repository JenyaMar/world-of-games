pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                sh 'docker build ./WorldOfGames/ -t jenmar/flaskapp:v1'
            }
        }
        stage('Run docker build') {
            steps {
                sh 'docker run -d -p 8777 -v $(pwd)/Scores.txt:/root/app/Scores.txt --name my-flask-test3 jenmar/flaskapp:v1'
            }
        }
        stage('Run tests') {
            steps {
                sh 'apt-get update && \
                    apt-get install -y gnupg wget curl unzip --no-install-recommends && \
                    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
                    echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list && \
                    apt-get update -y && \
                    apt-get install -y google-chrome-stable && \
                    CHROMEVER=$(google-chrome --product-version | grep -o "[^\.]*\.[^\.]*\.[^\.]*") && \
                    DRIVERVER=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROMEVER") && \
                    wget -q --continue -P /chromedriver "http://chromedriver.storage.googleapis.com/$DRIVERVER/chromedriver_linux64.zip" && \
                    unzip /chromedriver/chromedriver* -d /chromedriver'
                sh 'python3 ./WorldOfGames/Tests/e2e.py'
            }
        }
    }
    post {
        always {
            sh "docker stop my-flask-test3"
            sh "docker rm my-flask-test3"
        }
    }
}